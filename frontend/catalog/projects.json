[
  {
    "name": "AllCaughtUp.tech - WIP",
    "description": "A weekly newsletter that curates the best Ai & tech stories all automatically without human intervention. It is built with Go and Next.js, hosted on GCP using Cloud Run and Cloud Functions, and utilizes Firebase for persistence.",
    "tags": [
      "Go",
      "Next.js",
      "GCP - Cloud Run & Cloud Functions",
      "Firebase"
    ],
    "link": "https://www.allcaughtup.tech"
  },
  {
    "name": "Personal Website",
    "description": "A modern portfolio website built with Go, HTMX, and Tailwind CSS. This project showcases a dynamic, lightweight website architecture with minimal JavaScript, deployed on Fly.io.",
    "tags": [
      "Go",
      "HTMX",
      "Alpine.js",
      "Tailwind CSS",
      "Fly.io"
    ],
    "link": "https://github.com/aHobeychi/Personal-Website"
  },
  {
    "name": "Badminton-Booker",
    "description": "An automated badminton court notification tool. This project uses Playwright to scrape the booking website and sends notifications via a Telegram Bot. It leverages Firebase for persistence and GitHub Actions for CI/CD.",
    "tags": [
      "Python",
      "Playwright",
      "Github Actions",
      "Telegram Bot",
      "Firebase"
    ],
    "link": "https://github.com/aHobeychi/Badminton-Booker"
  },
  {
    "name": "Go Compiler",
    "description": "A procedural programming language compiler with C-like syntax, built from scratch using Go. It supports core language features such as arrays, loops, functions, and arithmetic operations, along with logical operators and ternary expressions. The compiler enforces strong type checking and variable declaration validation, providing clear error messages. It translates source code into a simplified RISC instruction set for efficient execution.",
    "tags": [
      "Go",
      "Compiler Design"
    ],
    "link": "https://github.com/aHobeychi/Go-Compiler"
  },
  {
    "name": "Satellite Imagery Processing",
    "description": "A machine learning tool for analyzing Sentinel-2 satellite imagery. It applies clustering for area segmentation, supervised learning for pixel classification, and deep learning with ResNets for large-scale image categorization. Detailed results are available in *Results.pdf*.",
    "tags": [
      "Python",
      "PyTorch",
      "SentinelSat",
      "GIS"
    ],
    "link": "https://github.com/aHobeychi/Satellite-Imagery"
  }
]